apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  labels:
    app: video-transcriber
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: video-transcriber
      component: monitoring
  template:
    metadata:
      labels:
        app: video-transcriber
        component: monitoring
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        args:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
        - name: prometheus-storage
          mountPath: /prometheus
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1"
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  labels:
    app: video-transcriber
    component: monitoring
spec:
  selector:
    app: video-transcriber
    component: monitoring
  ports:
  - port: 9090
    targetPort: 9090
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  labels:
    app: video-transcriber
    component: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    scrape_configs:
    - job_name: 'video-transcriber'
      static_configs:
      - targets: ['video-transcriber-service:80']
      metrics_path: '/metrics'
      scrape_interval: 30s

    - job_name: 'prometheus'
      static_configs:
      - targets: ['localhost:9090']

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: video-transcriber
    component: dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: video-transcriber
      component: dashboard
  template:
    metadata:
      labels:
        app: video-transcriber
        component: dashboard
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: admin
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: grafana-storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: video-transcriber
    component: dashboard
spec:
  selector:
    app: video-transcriber
    component: dashboard
  ports:
  - port: 3000
    targetPort: 3000
  type: ClusterIP
